name: Testing

on:
  pull_request:
  schedule:
    # Nightly at 7am UTC / 12am PHX.
    - cron:  '0 7 * * *'
  push:
    branches:
      - trunk
  workflow_dispatch:

jobs:

  behat:
    name: 'Behat Tests: WP ${{ matrix.wp }} on PHP ${{ matrix.php }} with MySQL ${{ matrix.mysql }} (Coverage: ${{ matrix.coverage }})'
    strategy:
      fail-fast: false
      matrix:
        php:
          - '8.0'
          - '7.4'
          - '7.3'
        wp:
          - 'latest'
        mysql:
          - '8.0'
        coverage:
          - 'none'
        include:
          - php: '7.4'
            wp: 'latest'
            mysql: '8.0'
            coverage: 'xdebug'
            continue-on-error: true
    runs-on: ubuntu-20.04
    env:
      MYSQL_DATABASE: llms_cli_tests
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_HOST: '127.0.0.1'
      LLMS_CLI_TEST_KEY_INFINITY: ${{ secrets.LLMS_CLI_TEST_KEY_INFINITY }}

    services:
      mysql:
        image: mysql:${{ matrix.mysql }}
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3 -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=llms_cli_tests --entrypoint sh mysql:${{ matrix.mysql }} -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"

    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Set up PHP envirnoment
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.php }}'
          extensions: gd, imagick, mysql, zip
          coverage: '${{ matrix.coverage }}'
          tools: composer

      - name: Get Composer cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Use Composer cache
        uses: actions/cache@master
        with:
          path: ${{ steps['composer-cache'].outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --ignore-platform-reqs

      - name: Start MySQL server
        run: sudo systemctl start mysql

      - name: Configure DB environment
        run: |
          echo "TESTS_DB_NAME=$MYSQL_DATABASE" >> $GITHUB_ENV
          echo "TESTS_DB_HOST=127.0.0.1:${{ job.services.mysql.ports['3306'] }}" >> $GITHUB_ENV
          echo "MYSQL_TCP_PORT=${{ job.services.mysql.ports['3306'] }}" >> $GITHUB_ENV
          echo "WP_CLI_TEST_DBUSER=$MYSQL_USER" >> $GITHUB_ENV
          echo "WP_CLI_TEST_DBROOTPASS=$MYSQL_PASSWORD" >> $GITHUB_ENV

      - name: Install tests
        run: composer run tests-install

      - name: Configure Test Coverage
        if: ${{ matrix.coverage == 'xdebug' }}
        run: |
          echo "RUN_CODE_COVERAGE=1" >> $GITHUB_ENV

      - name: Configure API Integration Tests
        if: ${{ matrix.coverage == 'xdebug' || matrix.php == '8.0' }}
        run: |
          echo "RUN_API_INTEGRATION_TESTS=1" >> $GITHUB_ENV

      - name: Run Behat Tests (excluding @api-integration)
        if: ${{ env.RUN_API_INTEGRATION_TESTS != '1' }}
        run: composer run tests-behat -- --tags '~@api-integration'

      - name: Run Behat Tests (all)
        if: ${{ env.RUN_API_INTEGRATION_TESTS == '1' }}
        run: composer run tests-behat

      - name: Upload Test Coverage Reports
        if: ${{ matrix.coverage == 'xdebug' }}
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/tmp/coverage/clover-behat/*.xml:clover

      - name: Notify success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFIER_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: lifterlms-development
          status: SUCCESS
          color: good

      - name: Notify failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFIER_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: lifterlms-development
          status: FAILED
          color: danger
